{"ast":null,"code":"import * as actionTypes from './actions';\nconst initialState = {\n  ingredients: {\n    salad: 0,\n    bacon: 0,\n    meat: 0,\n    cheese: 0\n  },\n  totalPrice: 4\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          // ingredientName is a payload we get to the action here\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        }\n      };\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          // ingredientName is a payload we get to the action here\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/gunjan/Desktop/bb-project/src/store/reducer.js"],"names":["actionTypes","initialState","ingredients","salad","bacon","meat","cheese","totalPrice","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAC;AACfC,EAAAA,WAAW,EAAC;AACRC,IAAAA,KAAK,EAAC,CADE;AAERC,IAAAA,KAAK,EAAC,CAFE;AAGRC,IAAAA,IAAI,EAAC,CAHG;AAIRC,IAAAA,MAAM,EAAC;AAJC,GADG;AAOfC,EAAAA,UAAU,EAAC;AAPI,CAAnB;;AAUA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACR,YAAP,EAAoBS,MAApB,KAA+B;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,WAAW,CAACY,cAAjB;AACI,aAAM,EACF,GAAGH,KADD;AAEFP,QAAAA,WAAW,EAAC,EACR,GAAGO,KAAK,CAACP,WADD;AAER;AACA,WAACQ,MAAM,CAACG,cAAR,GAAwBJ,KAAK,CAACP,WAAN,CAAkBQ,MAAM,CAACG,cAAzB,IAAyC;AAHzD;AAFV,OAAN;;AASJ,SAAKb,WAAW,CAACc,iBAAjB;AACI,aAAM,EACF,GAAGL,KADD;AAEFP,QAAAA,WAAW,EAAC,EACR,GAAGO,KAAK,CAACP,WADD;AAER;AACA,WAACQ,MAAM,CAACG,cAAR,GAAwBJ,KAAK,CAACP,WAAN,CAAkBQ,MAAM,CAACG,cAAzB,IAAyC;AAHzD;AAFV,OAAN;;AASJ;AACI,aAAOJ,KAAP;AAtBR;AA0BH,CA3BD;;AA6BA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from './actions';\n\nconst initialState={\n    ingredients:{\n        salad:0,\n        bacon:0,\n        meat:0,\n        cheese:0\n    },\n    totalPrice:4  \n};\n\nconst reducer = (state=initialState,action) => {\n    switch(action.type){\n        case actionTypes.ADD_INGREDIENT:\n            return{\n                ...state,\n                ingredients:{\n                    ...state.ingredients,\n                    // ingredientName is a payload we get to the action here\n                    [action.ingredientName]:state.ingredients[action.ingredientName]+1\n                }\n\n            };\n        case actionTypes.REMOVE_INGREDIENT:\n            return{\n                ...state,\n                ingredients:{\n                    ...state.ingredients,\n                    // ingredientName is a payload we get to the action here\n                    [action.ingredientName]:state.ingredients[action.ingredientName]-1\n                }\n\n            };   \n        default : \n            return state;\n            \n    }\n\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}