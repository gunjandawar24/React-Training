{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.6,\n  meat: 1.5,\n  bacon: 1\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          // ingredientName is a payload we get to the action here\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          // ingredientName is a payload we get to the action here\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      };\n\n    case actionTypes.SET_INGREDIENTS:\n      return { ...state,\n        ingredients: action.ingredients,\n        error: false\n      };\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return { ...state,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/gunjan/Desktop/bb-project/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAC;AACfC,EAAAA,WAAW,EAAC,IADG;AAEfC,EAAAA,UAAU,EAAC,CAFI;AAGfC,EAAAA,KAAK,EAAC;AAHS,CAAnB;AAMA,MAAMC,iBAAiB,GAAC;AACpBC,EAAAA,KAAK,EAAC,GADc;AAEpBC,EAAAA,MAAM,EAAC,GAFa;AAGpBC,EAAAA,IAAI,EAAC,GAHe;AAIpBC,EAAAA,KAAK,EAAC;AAJc,CAAxB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACV,YAAP,EAAoBW,MAApB,KAA+B;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,WAAW,CAACc,cAAjB;AACI,aAAM,EACF,GAAGH,KADD;AAEFT,QAAAA,WAAW,EAAC,EACR,GAAGS,KAAK,CAACT,WADD;AAER;AACA,WAACU,MAAM,CAACG,cAAR,GAAwBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAAyC;AAHzD,SAFV;AAOFZ,QAAAA,UAAU,EAACQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACG,cAAR;AAP7C,OAAN;;AAUJ,SAAKf,WAAW,CAACgB,iBAAjB;AACI,aAAM,EACF,GAAGL,KADD;AAEFT,QAAAA,WAAW,EAAC,EACR,GAAGS,KAAK,CAACT,WADD;AAER;AACA,WAACU,MAAM,CAACG,cAAR,GAAwBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAAyC;AAHzD,SAFV;AAOFZ,QAAAA,UAAU,EAACQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACG,cAAR;AAP7C,OAAN;;AAUJ,SAAKf,WAAW,CAACiB,eAAjB;AACI,aAAM,EACF,GAAGN,KADD;AAEFT,QAAAA,WAAW,EAACU,MAAM,CAACV,WAFjB;AAGFE,QAAAA,KAAK,EAAC;AAHJ,OAAN;;AAMJ,SAAKJ,WAAW,CAACkB,wBAAjB;AACI,aAAO,EACH,GAAGP,KADA;AAEHP,QAAAA,KAAK,EAAC;AAFH,OAAP;;AAKJ;AACI,aAAOO,KAAP;AArCR;AAyCH,CA1CD;;AA4CA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\n\nconst initialState={\n    ingredients:null,\n    totalPrice:4,\n    error:false  \n};\n\nconst INGREDIENT_PRICES={\n    salad:0.5,\n    cheese:0.6,\n    meat:1.5,\n    bacon:1\n}\n\nconst reducer = (state=initialState,action) => {\n    switch(action.type){\n        case actionTypes.ADD_INGREDIENT:\n            return{\n                ...state,\n                ingredients:{\n                    ...state.ingredients,\n                    // ingredientName is a payload we get to the action here\n                    [action.ingredientName]:state.ingredients[action.ingredientName]+1\n                },\n                totalPrice:state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n\n            };\n        case actionTypes.REMOVE_INGREDIENT:\n            return{\n                ...state,\n                ingredients:{\n                    ...state.ingredients,\n                    // ingredientName is a payload we get to the action here\n                    [action.ingredientName]:state.ingredients[action.ingredientName]-1\n                },\n                totalPrice:state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n\n            };  \n        case actionTypes.SET_INGREDIENTS:\n            return{\n                ...state,\n                ingredients:action.ingredients,\n                error:false\n            };    \n\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return {\n                ...state,\n                error:true\n            }    \n           \n        default : \n            return state;\n            \n    }\n\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}