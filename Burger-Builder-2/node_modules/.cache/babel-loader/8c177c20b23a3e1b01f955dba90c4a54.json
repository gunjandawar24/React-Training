{"ast":null,"code":"var _jsxFileName = \"/home/gunjan/Desktop/React-hooks/bb-project(using hooks)/src/App.js\";\nimport React, { useEffect } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport Logout from './containers/Auth/Logout/Logout';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/index';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n});\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n});\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n}); //root component of our application:\n\nconst App = props => {\n  useEffect(() => {\n    props.onTryAutoSignup();\n  }, [props]); //the paths which you think never be visited by a user then you can load those path using lazy loading\n  //like here those paths can be /orders or /checkout.\n  //for unauthenticated users..\n\n  let routes = /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/auth\",\n    component: asyncAuth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: BurgerBuilder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }));\n\n  if (props.isAuthenticated) {\n    routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/checkout\",\n      component: asyncCheckout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/orders\",\n      component: asyncOrders,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/auth\",\n      component: asyncAuth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/logout\",\n      component: Logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: BurgerBuilder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, routes));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(actions.authCheckState())\n  };\n}; //connect will give error if we use with routing therefore wrap it using withRouter.\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App)); //for any unknown route--\n\n{\n  /* <Redirect to=\"/\" /> */\n}","map":{"version":3,"sources":["/home/gunjan/Desktop/React-hooks/bb-project(using hooks)/src/App.js"],"names":["React","useEffect","Layout","BurgerBuilder","Route","Switch","withRouter","Redirect","Logout","connect","actions","asyncComponent","asyncCheckout","asyncOrders","asyncAuth","App","props","onTryAutoSignup","routes","isAuthenticated","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","onTryAutoSignUp","authCheckState"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport { Route,Switch, withRouter , Redirect } from 'react-router-dom';\nimport Logout from './containers/Auth/Logout/Logout';\nimport {connect} from 'react-redux';\nimport * as actions from './store/actions/index';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n});\n\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n});\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n});\n\n//root component of our application:\nconst App = props => {\n  useEffect(() => {\n    props.onTryAutoSignup();\n  }, [props]);\n\n  //the paths which you think never be visited by a user then you can load those path using lazy loading\n  //like here those paths can be /orders or /checkout.\n\n    //for unauthenticated users..\n    let routes = (\n      <Switch>\n          <Route path=\"/auth\" component={asyncAuth} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if(props.isAuthenticated){\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={asyncCheckout} />\n          <Route path=\"/orders\" component={asyncOrders} />\n          <Route path=\"/auth\" component={asyncAuth} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );  \n    }\n\n  return (\n    <div >\n      <Layout>\n        {routes}\n      </Layout>\n      \n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return{\n    isAuthenticated : state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp : () => dispatch(actions.authCheckState())\n  }\n}\n\n//connect will give error if we use with routing therefore wrap it using withRouter.\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App));\n\n\n//for any unknown route--\n{/* <Redirect to=\"/\" /> */}"]},"metadata":{},"sourceType":"module"}