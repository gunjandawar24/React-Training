{"ast":null,"code":"import * as actionTypes from '../actions/actions';\nconst initialState = {\n  counter: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      return { ...state,\n        counter: state.counter + 1\n      };\n\n    case actionTypes.DECREMENT:\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case actionTypes.ADD:\n      return { ...state,\n        counter: state.counter + action.val\n      };\n\n    case actionTypes.SUBTRACT:\n      return { ...state,\n        counter: state.counter - action.val\n      };\n  } //it returns thr current  state.\n\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/gunjan/Desktop/redux-project/src/store/reducers/counter.js"],"names":["actionTypes","initialState","counter","reducer","state","action","type","INCREMENT","DECREMENT","ADD","val","SUBTRACT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,oBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAE9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,WAAW,CAACO,SAAjB;AACI,aAAO,EACP,GAAGH,KADI;AAEPF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAFlB,OAAP;;AAKJ,SAAKF,WAAW,CAACQ,SAAjB;AACI,aAAO,EACP,GAAGJ,KADI;AAEPF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAFlB,OAAP;;AAKJ,SAAKF,WAAW,CAACS,GAAjB;AACI,aAAO,EACP,GAAGL,KADI;AAEPF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACK;AAFzB,OAAP;;AAKJ,SAAKV,WAAW,CAACW,QAAjB;AACI,aAAO,EACP,GAAGP,KADI;AAEPF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACK;AAFzB,OAAP;AApBR,GAF8C,CA2B9C;;;AACA,SAAON,KAAP;AACH,CA7BD;;AA+BA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actions';\n\nconst initialState = {\n    counter: 0\n};\n\n\nconst reducer = (state = initialState, action) => {\n\n    switch(action.type){\n        case actionTypes.INCREMENT : \n            return {\n            ...state,\n            counter: state.counter + 1\n        };\n\n        case actionTypes.DECREMENT : \n            return {\n            ...state,\n            counter: state.counter - 1\n        };\n\n        case actionTypes.ADD : \n            return {\n            ...state,\n            counter: state.counter + action.val\n        };\n\n        case actionTypes.SUBTRACT : \n            return {\n            ...state,\n            counter: state.counter - action.val\n        };\n    }\n    //it returns thr current  state.\n    return state;\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}