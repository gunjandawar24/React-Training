{"ast":null,"code":"var _jsxFileName = \"/home/gunjan/Desktop/bb-project/src/containers/Checkout/Checkout.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      price: 0\n    };\n\n    this.checkoutCancelled = () => {\n      this.props.history.goBack();\n    };\n\n    this.checkoutContinued = () => {\n      this.props.history.replace('/checkout/contact-data');\n    };\n  }\n\n  //search includes url and so on..\n  //We use willmount instead of didMount bcz we want this component to be rendered before child components.\n  componentWillMount() {\n    const query = new URLSearchParams(this.props.location.search);\n    const ingredients = {};\n    let price = 0;\n\n    for (let param of query.entries()) {\n      // ['salad', '1']\n      if (param[0] === 'price') {\n        price = param[1];\n      } else {\n        ingredients[param[0]] = +param[1];\n      }\n    }\n\n    this.setState({\n      ingredients: ingredients,\n      totalPrice: price\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CheckoutSummary, {\n      ingredients: this.state.ingredients,\n      checkoutCancelled: this.checkoutCancelled,\n      checkoutContinued: this.checkoutContinued,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: this.props.match.path + '/contact-data' // component={ContactData}\n      ,\n      render: props => /*#__PURE__*/React.createElement(ContactData, Object.assign({\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 38\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Checkout; //render is getting special props from the server like history.","map":{"version":3,"sources":["/home/gunjan/Desktop/bb-project/src/containers/Checkout/Checkout.js"],"names":["React","Component","Route","CheckoutSummary","ContactData","Checkout","state","ingredients","price","checkoutCancelled","props","history","goBack","checkoutContinued","replace","componentWillMount","query","URLSearchParams","location","search","param","entries","setState","totalPrice","render","match","path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BK,KAD6B,GACrB;AACJC,MAAAA,WAAW,EAAE,IADT;AAEJC,MAAAA,KAAK,EAAC;AAFF,KADqB;;AAAA,SAuB7BC,iBAvB6B,GAuBT,MAAM;AACtB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACH,KAzB4B;;AAAA,SA2B7BC,iBA3B6B,GA2BT,MAAM;AACtB,WAAKH,KAAL,CAAWC,OAAX,CAAmBG,OAAnB,CAA2B,wBAA3B;AACH,KA7B4B;AAAA;;AAM7B;AACA;AACAC,EAAAA,kBAAkB,GAAI;AAClB,UAAMC,KAAK,GAAG,IAAIC,eAAJ,CAAqB,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,MAAzC,CAAd;AACA,UAAMZ,WAAW,GAAG,EAApB;AACA,QAAIC,KAAK,GAAG,CAAZ;;AACA,SAAM,IAAIY,KAAV,IAAmBJ,KAAK,CAACK,OAAN,EAAnB,EAAqC;AACjC;AACA,UAAID,KAAK,CAAC,CAAD,CAAL,KAAa,OAAjB,EAA0B;AACtBZ,QAAAA,KAAK,GAAGY,KAAK,CAAC,CAAD,CAAb;AACH,OAFD,MAEO;AACHb,QAAAA,WAAW,CAACa,KAAK,CAAC,CAAD,CAAN,CAAX,GAAwB,CAACA,KAAK,CAAC,CAAD,CAA9B;AACH;AACJ;;AACD,SAAKE,QAAL,CAAe;AAAEf,MAAAA,WAAW,EAAEA,WAAf;AAA4BgB,MAAAA,UAAU,EAAEf;AAAxC,KAAf;AACH;;AAUDgB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AACA,MAAA,WAAW,EAAE,KAAKlB,KAAL,CAAWC,WADxB;AAEA,MAAA,iBAAiB,EAAE,KAAKE,iBAFxB;AAGA,MAAA,iBAAiB,EAAE,KAAKI,iBAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAKI,oBAAC,KAAD;AACA,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWe,KAAX,CAAiBC,IAAjB,GAAwB,eAD9B,CAEA;AAFA;AAGA,MAAA,MAAM,EAAIhB,KAAD,iBAAY,oBAAC,WAAD;AAAa,QAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWC,WAArC;AAAkD,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWiB;AAApE,SAAoFb,KAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AAaH;;AA7C4B;;AA+CjC,eAAeL,QAAf,C,CAEA","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n    state = {\n        ingredients: null,\n        price:0\n    }\n\n    //search includes url and so on..\n    //We use willmount instead of didMount bcz we want this component to be rendered before child components.\n    componentWillMount () {\n        const query = new URLSearchParams( this.props.location.search );\n        const ingredients = {};\n        let price = 0;\n        for ( let param of query.entries() ) {\n            // ['salad', '1']\n            if (param[0] === 'price') {\n                price = param[1];\n            } else {\n                ingredients[param[0]] = +param[1];\n            }\n        }\n        this.setState( { ingredients: ingredients, totalPrice: price } );\n    }\n\n    checkoutCancelled = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinued = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        return (\n            <div>\n                <CheckoutSummary \n                ingredients={this.state.ingredients}\n                checkoutCancelled={this.checkoutCancelled}\n                checkoutContinued={this.checkoutContinued}/>\n                <Route \n                path={this.props.match.path + '/contact-data'} \n                // component={ContactData}\n                render={ (props) => (<ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props}/>)}\n                />\n            </div>\n        );\n    }\n}\nexport default Checkout;\n\n//render is getting special props from the server like history."]},"metadata":{},"sourceType":"module"}