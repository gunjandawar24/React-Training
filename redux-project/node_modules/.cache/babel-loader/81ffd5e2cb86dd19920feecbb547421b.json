{"ast":null,"code":"import * as actionTypes from './actionTypes'; //synchronous action-creator\n\nexport const saveResult = res => {\n  //change data----\n  // const updatedResult = res*2;\n  return {\n    type: actionTypes.STORE_RESULT,\n    result: res\n  };\n}; //async action-crreator\n\nexport const storeResult = res => {\n  //after 2 seconds i want to store the result.\n  //i'll get dispatch(in argument ) hre due to redux-thunk which can call to dispatch the action.\n  //save result ko pause kr dega for 2 seconds (basically blocking the old action and dispatch it gain in future)\n  return (dispatch, getState) => {\n    setTimeout(() => {\n      // const oldCounter = getState().ctr.counter;\n      // console.log(oldCounter);\n      dispatch(saveResult(res));\n    }, 2000);\n  };\n};\nexport const deleteResult = resElId => {\n  return {\n    type: actionTypes.DELETE_RESULT,\n    resultElId: resElId\n  };\n};","map":{"version":3,"sources":["/home/gunjan/Desktop/redux-project/src/store/actions/result.js"],"names":["actionTypes","saveResult","res","type","STORE_RESULT","result","storeResult","dispatch","getState","setTimeout","deleteResult","resElId","DELETE_RESULT","resultElId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAKC,GAAF,IAAW;AACjC;AACA;AACA,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI,YADf;AAEHC,IAAAA,MAAM,EAAEH;AAFL,GAAP;AAIH,CAPM,C,CASP;;AACA,OAAO,MAAMI,WAAW,GAAKJ,GAAF,IAAW;AAClC;AACA;AACA;AACA,SAAO,CAACK,QAAD,EAAUC,QAAV,KAAuB;AAC1BC,IAAAA,UAAU,CAAE,MAAM;AACd;AACA;AACAF,MAAAA,QAAQ,CAACN,UAAU,CAACC,GAAD,CAAX,CAAR;AACH,KAJS,EAIP,IAJO,CAAV;AAKH,GAND;AAOH,CAXM;AAaP,OAAO,MAAMQ,YAAY,GAAKC,OAAF,IAAe;AACvC,SAAO;AACHR,IAAAA,IAAI,EAAEH,WAAW,CAACY,aADf;AAEHC,IAAAA,UAAU,EAAEF;AAFT,GAAP;AAIH,CALM","sourcesContent":["import * as actionTypes from './actionTypes';\n\n//synchronous action-creator\nexport const saveResult = ( res ) => {\n    //change data----\n    // const updatedResult = res*2;\n    return {\n        type: actionTypes.STORE_RESULT, \n        result: res\n    };\n}\n\n//async action-crreator\nexport const storeResult = ( res ) => {\n    //after 2 seconds i want to store the result.\n    //i'll get dispatch(in argument ) hre due to redux-thunk which can call to dispatch the action.\n    //save result ko pause kr dega for 2 seconds (basically blocking the old action and dispatch it gain in future)\n    return (dispatch,getState) => {\n        setTimeout( () => {\n            // const oldCounter = getState().ctr.counter;\n            // console.log(oldCounter);\n            dispatch(saveResult(res));\n        }, 2000 );\n    }\n};\n\nexport const deleteResult = ( resElId ) => {\n    return {\n        type: actionTypes.DELETE_RESULT,\n        resultElId: resElId\n    };\n};\n"]},"metadata":{},"sourceType":"module"}