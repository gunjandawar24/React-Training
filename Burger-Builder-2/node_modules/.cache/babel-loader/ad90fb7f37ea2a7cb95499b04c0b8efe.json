{"ast":null,"code":"var _jsxFileName = \"/home/gunjan/Desktop/React-hooks/bb-project(using hooks)/src/containers/Checkout/Checkout.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nconst Checkout = props => {\n  // state = {\n  //     ingredients: null,\n  //     price:0\n  // }\n  // //search includes url and so on..\n  // //We use willmount instead of didMount bcz we want this component to be rendered before child components.\n  // componentWillMount () {\n  //     const query = new URLSearchParams( this.props.location.search );\n  //     const ingredients = {};\n  //     let price = 0;\n  //     for ( let param of query.entries() ) {\n  //         // ['salad', '1']\n  //         if (param[0] === 'price') {\n  //             price = param[1];\n  //         } else {\n  //             ingredients[param[0]] = +param[1];\n  //         }\n  //     }\n  //     this.setState( { ingredients: ingredients, totalPrice: price } );\n  // }\n  const checkoutCancelled = () => {\n    this.props.history.goBack();\n  };\n\n  const checkoutContinued = () => {\n    this.props.history.replace('/checkout/contact-data');\n  }; // if ingredients not been loaded yet\n\n\n  let summary = /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  });\n\n  if (props.ings) {\n    const purchasedRedirect = props.purchased ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 57\n      }\n    }) : null;\n    summary = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, purchasedRedirect, /*#__PURE__*/React.createElement(CheckoutSummary, {\n      ingredients: props.ings,\n      checkoutCancelled: checkoutCancelled,\n      checkoutContinued: checkoutContinued,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: props.match.path + '/contact-data',\n      component: ContactData // render={ (props) => (<ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props}/>)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  return summary;\n};\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout); //render is getting special props from the server like history.","map":{"version":3,"sources":["/home/gunjan/Desktop/React-hooks/bb-project(using hooks)/src/containers/Checkout/Checkout.js"],"names":["React","Route","Redirect","connect","CheckoutSummary","ContactData","Checkout","props","checkoutCancelled","history","goBack","checkoutContinued","replace","summary","ings","purchasedRedirect","purchased","match","path","mapStateToProps","state","burgerBuilder","ingredients","order"],"mappings":";AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAASC,KAAT,EAAiBC,QAAjB,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAK;AAIvB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,SAAKD,KAAL,CAAWE,OAAX,CAAmBC,MAAnB;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,SAAKJ,KAAL,CAAWE,OAAX,CAAmBG,OAAnB,CAA2B,wBAA3B;AACH,GAFD,CA9BuB,CAkCnB;;;AACA,MAAIC,OAAO,gBAAG,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd;;AACA,MAAGN,KAAK,CAACO,IAAT,EAAc;AACV,UAAMC,iBAAiB,GAAGR,KAAK,CAACS,SAAN,gBAAkB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,GAAwC,IAAlE;AACAH,IAAAA,OAAO,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKE,iBADL,eAEI,oBAAC,eAAD;AACI,MAAA,WAAW,EAAER,KAAK,CAACO,IADvB;AAEI,MAAA,iBAAiB,EAAEN,iBAFvB;AAGI,MAAA,iBAAiB,EAAEG,iBAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAMI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAEJ,KAAK,CAACU,KAAN,CAAYC,IAAZ,GAAmB,eAD7B;AAEI,MAAA,SAAS,EAAEb,WAFf,CAGI;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAeH;;AACD,SAAOQ,OAAP;AACH,CAvDL;;AAyDA,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHN,IAAAA,IAAI,EAACM,KAAK,CAACC,aAAN,CAAoBC,WADtB;AAEHN,IAAAA,SAAS,EAACI,KAAK,CAACG,KAAN,CAAYP;AAFnB,GAAP;AAIH,CALD;;AAOA,eAAeb,OAAO,CAACgB,eAAD,CAAP,CAAyBb,QAAzB,CAAf,C,CAEA","sourcesContent":["import React, {  } from 'react';\nimport { Route , Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nconst Checkout = props =>  {\n\n\n\n    // state = {\n    //     ingredients: null,\n    //     price:0\n    // }\n\n    // //search includes url and so on..\n    // //We use willmount instead of didMount bcz we want this component to be rendered before child components.\n    // componentWillMount () {\n    //     const query = new URLSearchParams( this.props.location.search );\n    //     const ingredients = {};\n    //     let price = 0;\n    //     for ( let param of query.entries() ) {\n    //         // ['salad', '1']\n    //         if (param[0] === 'price') {\n    //             price = param[1];\n    //         } else {\n    //             ingredients[param[0]] = +param[1];\n    //         }\n    //     }\n    //     this.setState( { ingredients: ingredients, totalPrice: price } );\n    // }\n\n    const checkoutCancelled = () => {\n        this.props.history.goBack();\n    }\n\n    const checkoutContinued = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n        // if ingredients not been loaded yet\n        let summary = <Redirect to=\"/\" />\n        if(props.ings){\n            const purchasedRedirect = props.purchased ? <Redirect to=\"/\" /> : null ;\n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary \n                        ingredients={props.ings}\n                        checkoutCancelled={checkoutCancelled}\n                        checkoutContinued={checkoutContinued}/> \n                    <Route \n                        path={props.match.path + '/contact-data'} \n                        component={ContactData}\n                        // render={ (props) => (<ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props}/>)}\n                    />       \n                </div>\n                \n            )\n        }\n        return summary ;\n    }\n\nconst mapStateToProps = state => {\n    return {\n        ings:state.burgerBuilder.ingredients,\n        purchased:state.order.purchased\n    };\n}\n\nexport default connect(mapStateToProps)(Checkout);\n\n//render is getting special props from the server like history."]},"metadata":{},"sourceType":"module"}