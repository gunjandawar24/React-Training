{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  orders: [],\n  //loading is set to true when we start fetching the burger\n  loading: false,\n  purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_BURGER_START:\n      return { ...state,\n        loading: true\n      };\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      const newOrder = { ...action.orderData,\n        id: action.orderId\n      };\n      return { ...state,\n        //because i am done with my order.\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat(newOrder)\n      };\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return { ...state,\n        //false bcz even if we fail then also we are done.\n        loading: false\n      };\n\n    case actionTypes.PURCHASE_INIT:\n      return { ...state,\n        purchased: false\n      };\n\n    case actionTypes.FETCH_ORDERS_START:\n      return { ...state,\n        loading: true\n      };\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return { ...state,\n        // ..storing the  fetched orders in a array.\n        orders: action.orders,\n        loading: false\n      };\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return { ...state,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/gunjan/Desktop/bb-project/src/store/reducers/order.js"],"names":["actionTypes","initialState","orders","loading","purchased","reducer","state","action","type","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","newOrder","orderData","id","orderId","concat","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAC,EADU;AAEjB;AACAC,EAAAA,OAAO,EAAC,KAHS;AAIjBC,EAAAA,SAAS,EAAC;AAJO,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACL,YAAP,EAAoBM,MAApB,KAA+B;AAC3C,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKR,WAAW,CAACS,qBAAjB;AACI,aAAM,EACF,GAAGH,KADD;AAEFH,QAAAA,OAAO,EAAC;AAFN,OAAN;;AAKJ,SAAKH,WAAW,CAACU,uBAAjB;AACI,YAAMC,QAAQ,GAAG,EACb,GAAGJ,MAAM,CAACK,SADG;AAEbC,QAAAA,EAAE,EAACN,MAAM,CAACO;AAFG,OAAjB;AAIA,aAAM,EACF,GAAGR,KADD;AAEF;AACAH,QAAAA,OAAO,EAAC,KAHN;AAIFC,QAAAA,SAAS,EAAC,IAJR;AAKFF,QAAAA,MAAM,EAACI,KAAK,CAACJ,MAAN,CAAaa,MAAb,CAAoBJ,QAApB;AALL,OAAN;;AASJ,SAAKX,WAAW,CAACgB,oBAAjB;AACI,aAAM,EACF,GAAGV,KADD;AAEF;AACAH,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAOA,SAAKH,WAAW,CAACiB,aAAjB;AACI,aAAM,EACF,GAAGX,KADD;AAEFF,QAAAA,SAAS,EAAC;AAFR,OAAN;;AAKJ,SAAKJ,WAAW,CAACkB,kBAAjB;AACI,aAAM,EACF,GAAGZ,KADD;AAEFH,QAAAA,OAAO,EAAC;AAFN,OAAN;;AAIJ,SAAKH,WAAW,CAACmB,oBAAjB;AACI,aAAM,EACF,GAAGb,KADD;AAEF;AACAJ,QAAAA,MAAM,EAACK,MAAM,CAACL,MAHZ;AAIFC,QAAAA,OAAO,EAAC;AAJN,OAAN;;AAOJ,SAAKH,WAAW,CAACoB,iBAAjB;AACI,aAAM,EACF,GAAGd,KADD;AAEFH,QAAAA,OAAO,EAAC;AAFN,OAAN;;AAKR;AACI,aAAOG,KAAP;AAxDR;AA0DH,CA3DD;;AA6DA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\n\n\nconst initialState = {\n    orders:[],\n    //loading is set to true when we start fetching the burger\n    loading:false,\n    purchased:false\n}\n\nconst reducer = (state=initialState,action) => {\n    switch(action.type){\n\n        case actionTypes.PURCHASE_BURGER_START:\n            return{\n                ...state,\n                loading:true\n            }\n\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            const newOrder = {\n                ...action.orderData,\n                id:action.orderId\n            }\n            return{\n                ...state,\n                //because i am done with my order.\n                loading:false,\n                purchased:true,\n                orders:state.orders.concat(newOrder),\n               \n            }\n\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return{\n                ...state,\n                //false bcz even if we fail then also we are done.\n                loading:false\n\n            } \n        \n            case actionTypes.PURCHASE_INIT:\n                return{\n                    ...state,\n                    purchased:false\n                }\n\n            case actionTypes.FETCH_ORDERS_START:\n                return{\n                    ...state,\n                    loading:true\n                }    \n            case actionTypes.FETCH_ORDERS_SUCCESS:\n                return{\n                    ...state,\n                    // ..storing the  fetched orders in a array.\n                    orders:action.orders,\n                    loading:false\n\n                }   \n            case actionTypes.FETCH_ORDERS_FAIL:\n                return{\n                    ...state,\n                    loading:false\n                }     \n\n        default:\n            return state;       \n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}