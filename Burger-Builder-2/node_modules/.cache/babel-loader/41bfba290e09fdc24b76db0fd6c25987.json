{"ast":null,"code":"var _jsxFileName = \"/home/gunjan/Desktop/React-hooks/bb-project(using hooks)/src/hoc/Layout/Layout.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'; // import { logout } from '../../store/actions/auth';\n\nconst Layout = props => {\n  const [sideDrawerIsVisible, setSideDrawerIsVisible] = useState(false);\n\n  const sideDrawerClosedHandler = () => {\n    setSideDrawerIsVisible(false); // this.setState({showSideDrawer:false});\n  }; //when we are using state in setState then do it using function\n\n\n  const sideDrawerToggleHandler = () => {\n    // this.setState({showSideDrawer:!this.state.showSideDrawer})\n    setSideDrawerIsVisible(!sideDrawerIsVisible);\n  };\n\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    isAuth: props.isAuthenticated,\n    drawerToggleClicked: sideDrawerToggleHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SideDrawer, {\n    isAuth: props.isAuthenticated,\n    open: this.state.showSideDrawer,\n    closed: sideDrawerClosedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.Content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, props.children));\n};\n\nconst mapSateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapSateToProps)(Layout);","map":{"version":3,"sources":["/home/gunjan/Desktop/React-hooks/bb-project(using hooks)/src/hoc/Layout/Layout.js"],"names":["React","useState","connect","Aux","classes","Toolbar","SideDrawer","Layout","props","sideDrawerIsVisible","setSideDrawerIsVisible","sideDrawerClosedHandler","sideDrawerToggleHandler","isAuthenticated","state","showSideDrawer","Content","children","mapSateToProps","auth","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,GAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,UAAP,MAAuB,mDAAvB,C,CACA;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACpB,QAAM,CAACC,mBAAD,EAAqBC,sBAArB,IAA+CT,QAAQ,CAAC,KAAD,CAA7D;;AAEA,QAAMU,uBAAuB,GAAC,MAAI;AAC9BD,IAAAA,sBAAsB,CAAC,KAAD,CAAtB,CAD8B,CAE9B;AACH,GAHD,CAHoB,CAQpB;;;AACA,QAAME,uBAAuB,GAAG,MAAM;AAClC;AACDF,IAAAA,sBAAsB,CAAC,CAACD,mBAAF,CAAtB;AACF,GAHD;;AAII,sBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACA,IAAA,MAAM,EAAED,KAAK,CAACK,eADd;AAEA,IAAA,mBAAmB,EAAED,uBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII,oBAAC,UAAD;AACA,IAAA,MAAM,EAAEJ,KAAK,CAACK,eADd;AAEA,IAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,cAFjB;AAGA,IAAA,MAAM,EAAEJ,uBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAQI;AAAM,IAAA,SAAS,EAAEP,OAAO,CAACY,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,KAAK,CAACS,QADX,CARJ,CADA;AAcH,CA3BL;;AA6BA,MAAMC,cAAc,GAAGJ,KAAK,IAAI;AAC5B,SAAO;AACJD,IAAAA,eAAe,EAACC,KAAK,CAACK,IAAN,CAAWC,KAAX,KAAoB;AADhC,GAAP;AAGH,CAJD;;AAMA,eAAelB,OAAO,CAACgB,cAAD,CAAP,CAAwBX,MAAxB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux  from '../Aux/Aux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n// import { logout } from '../../store/actions/auth';\n\nconst Layout = props => {\n    const [sideDrawerIsVisible,setSideDrawerIsVisible] = useState(false);\n\n    const sideDrawerClosedHandler=()=>{\n        setSideDrawerIsVisible(false)\n        // this.setState({showSideDrawer:false});\n    }    \n\n    //when we are using state in setState then do it using function\n    const sideDrawerToggleHandler = () => {\n        // this.setState({showSideDrawer:!this.state.showSideDrawer})\n       setSideDrawerIsVisible(!sideDrawerIsVisible);\n    }\n        return(\n        <Aux>\n            <Toolbar  \n            isAuth={props.isAuthenticated}\n            drawerToggleClicked={sideDrawerToggleHandler}/>\n            <SideDrawer \n            isAuth={props.isAuthenticated}\n            open={this.state.showSideDrawer} \n            closed={sideDrawerClosedHandler}/>\n            <main className={classes.Content}>\n                {props.children}\n            </main>\n        </Aux>\n        )\n    }\n\nconst mapSateToProps = state => {\n    return {\n       isAuthenticated:state.auth.token !==null\n    };\n};\n\nexport default connect(mapSateToProps)(Layout);\n"]},"metadata":{},"sourceType":"module"}