{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  counter: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      return updateObject(state, {\n        counter: state.counter + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return updateObject(state, {\n        counter: state.counter - 1\n      });\n\n    case actionTypes.ADD:\n      return updateObject(state, {\n        counter: state.counter + action.val\n      });\n\n    case actionTypes.SUBTRACT:\n      return updateObject(state, {\n        counter: state.counter - action.val\n      });\n  } //it returns thr current  state.\n\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/gunjan/Desktop/redux-project/src/store/reducers/counter.js"],"names":["actionTypes","updateObject","initialState","counter","reducer","state","action","type","INCREMENT","DECREMENT","ADD","val","SUBTRACT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAE9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,WAAW,CAACQ,SAAjB;AACI,aAAOP,YAAY,CAACI,KAAD,EAAO;AAACF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAA1B,OAAP,CAAnB;;AAEJ,SAAKH,WAAW,CAACS,SAAjB;AACI,aAAOR,YAAY,CAACI,KAAD,EAAO;AAACF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAA1B,OAAP,CAAnB;;AAEJ,SAAKH,WAAW,CAACU,GAAjB;AACI,aAAOT,YAAY,CAACI,KAAD,EAAO;AAACF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACK;AAAjC,OAAP,CAAnB;;AAEJ,SAAKX,WAAW,CAACY,QAAjB;AACI,aAAOX,YAAY,CAACI,KAAD,EAAO;AAACF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACK;AAAjC,OAAP,CAAnB;AAXR,GAF8C,CAe9C;;;AACA,SAAON,KAAP;AACH,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    counter: 0\n};\n\n\nconst reducer = (state = initialState, action) => {\n\n    switch(action.type){\n        case actionTypes.INCREMENT : \n            return updateObject(state,{counter: state.counter + 1});\n\n        case actionTypes.DECREMENT : \n            return updateObject(state,{counter: state.counter - 1});\n\n        case actionTypes.ADD : \n            return updateObject(state,{counter: state.counter + action.val});\n            \n        case actionTypes.SUBTRACT : \n            return updateObject(state,{counter: state.counter - action.val});\n    }\n    //it returns thr current  state.\n    return state;\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}