{"ast":null,"code":"var _jsxFileName = \"/home/gunjan/Desktop/bb-project/src/containers/Checkout/Checkout.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkoutCancelled = () => {\n      this.props.history.goBack();\n    };\n\n    this.checkoutContinued = () => {\n      this.props.history.replace('/checkout/contact-data');\n    };\n  }\n\n  render() {\n    // if ingredients not been loaded yet\n    let summary = /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }\n    });\n\n    if (this.props.ings) {\n      const purchasedRedirect = this.props.purchased ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 62\n        }\n      }) : null;\n      summary = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, purchasedRedirect, /*#__PURE__*/React.createElement(CheckoutSummary, {\n        ingredients: this.props.ings,\n        checkoutCancelled: this.checkoutCancelled,\n        checkoutContinued: this.checkoutContinued,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: this.props.match.path + '/contact-data',\n        component: ContactData // render={ (props) => (<ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props}/>)}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return summary;\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout); //render is getting special props from the server like history.","map":{"version":3,"sources":["/home/gunjan/Desktop/bb-project/src/containers/Checkout/Checkout.js"],"names":["React","Component","Route","Redirect","connect","CheckoutSummary","ContactData","Checkout","checkoutCancelled","props","history","goBack","checkoutContinued","replace","render","summary","ings","purchasedRedirect","purchased","match","path","mapStateToProps","state","burgerBuilder","ingredients","order"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAiBC,QAAjB,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SA0B7BO,iBA1B6B,GA0BT,MAAM;AACtB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACH,KA5B4B;;AAAA,SA8B7BC,iBA9B6B,GA8BT,MAAM;AACtB,WAAKH,KAAL,CAAWC,OAAX,CAAmBG,OAAnB,CAA2B,wBAA3B;AACH,KAhC4B;AAAA;;AAkC7BC,EAAAA,MAAM,GAAG;AACL;AACA,QAAIC,OAAO,gBAAG,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;;AACA,QAAG,KAAKN,KAAL,CAAWO,IAAd,EAAmB;AACf,YAAMC,iBAAiB,GAAG,KAAKR,KAAL,CAAWS,SAAX,gBAAuB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB,GAA6C,IAAvE;AACAH,MAAAA,OAAO,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKE,iBADL,eAEI,oBAAC,eAAD;AACI,QAAA,WAAW,EAAE,KAAKR,KAAL,CAAWO,IAD5B;AAEI,QAAA,iBAAiB,EAAE,KAAKR,iBAF5B;AAGI,QAAA,iBAAiB,EAAE,KAAKI,iBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAMI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWU,KAAX,CAAiBC,IAAjB,GAAwB,eADlC;AAEI,QAAA,SAAS,EAAEd,WAFf,CAGI;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ;AAeH;;AACD,WAAOS,OAAP;AACH;;AAxD4B;;AA2DjC,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHN,IAAAA,IAAI,EAACM,KAAK,CAACC,aAAN,CAAoBC,WADtB;AAEHN,IAAAA,SAAS,EAACI,KAAK,CAACG,KAAN,CAAYP;AAFnB,GAAP;AAIH,CALD;;AAUA,eAAed,OAAO,CAACiB,eAAD,CAAP,CAAyBd,QAAzB,CAAf,C,CAEA","sourcesContent":["import React, { Component } from 'react';\nimport { Route , Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\n\n\n    // state = {\n    //     ingredients: null,\n    //     price:0\n    // }\n\n    // //search includes url and so on..\n    // //We use willmount instead of didMount bcz we want this component to be rendered before child components.\n    // componentWillMount () {\n    //     const query = new URLSearchParams( this.props.location.search );\n    //     const ingredients = {};\n    //     let price = 0;\n    //     for ( let param of query.entries() ) {\n    //         // ['salad', '1']\n    //         if (param[0] === 'price') {\n    //             price = param[1];\n    //         } else {\n    //             ingredients[param[0]] = +param[1];\n    //         }\n    //     }\n    //     this.setState( { ingredients: ingredients, totalPrice: price } );\n    // }\n\n    checkoutCancelled = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinued = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        // if ingredients not been loaded yet\n        let summary = <Redirect to=\"/\" />\n        if(this.props.ings){\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null ;\n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary \n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelled}\n                        checkoutContinued={this.checkoutContinued}/> \n                    <Route \n                        path={this.props.match.path + '/contact-data'} \n                        component={ContactData}\n                        // render={ (props) => (<ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props}/>)}\n                    />       \n                </div>\n                \n            )\n        }\n        return summary ;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings:state.burgerBuilder.ingredients,\n        purchased:state.order.purchased\n    };\n}\n\n\n\n\nexport default connect(mapStateToProps)(Checkout);\n\n//render is getting special props from the server like history."]},"metadata":{},"sourceType":"module"}