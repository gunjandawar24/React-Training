{"ast":null,"code":"var _jsxFileName = \"/home/gunjan/Desktop/React-hooks/bb-project(using hooks)/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport burgerReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport thunk from 'redux-thunk'; // import registerServiceWorker from './registerServiceWorker';\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerReducer,\n  order: orderReducer,\n  auth: authReducer\n}); //now redux dev tool will only be available in the development environment.(when we deploy,it will not work)\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk))); // ReactDOM.render(\n//   <React.StrictMode>\n//     <Provider store={store}>\n//       <BrowserRouter>\n//         <App />\n//       </BrowserRouter>\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nconst app = /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 11\n  }\n})));\nReactDOM.render(app, document.getElementById('root')); // registerServiceWorker();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/gunjan/Desktop/React-hooks/bb-project(using hooks)/src/index.js"],"names":["React","ReactDOM","App","Provider","createStore","applyMiddleware","compose","combineReducers","burgerReducer","orderReducer","authReducer","serviceWorker","BrowserRouter","thunk","rootReducer","burgerBuilder","order","auth","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","app","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAqBC,eAArB,EAAqCC,OAArC,EAA6CC,eAA7C,QAAoE,OAApE;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AAEA,MAAMC,WAAW,GAAGP,eAAe,CAAC;AAClCQ,EAAAA,aAAa,EAACP,aADoB;AAElCQ,EAAAA,KAAK,EAACP,YAF4B;AAGlCQ,EAAAA,IAAI,EAACP;AAH6B,CAAD,CAAnC,C,CAMA;;AACA,MAAMQ,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCC,MAAM,CAACC,oCAAhD,GAAuF,QAAQjB,OAAxH;AACA,MAAMkB,KAAK,GAACpB,WAAW,CAACU,WAAD,EAAaI,gBAAgB,CAClDb,eAAe,CAACQ,KAAD,CADmC,CAA7B,CAAvB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMY,GAAG,gBACP,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADF;AAQAvB,QAAQ,CAACyB,MAAT,CAAiBD,GAAjB,EAAsBE,QAAQ,CAACC,cAAT,CAAyB,MAAzB,CAAtB,E,CACA;AAEA;AACA;AACA;;AACAjB,aAAa,CAACkB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore,applyMiddleware,compose,combineReducers } from 'redux';\nimport burgerReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport thunk from 'redux-thunk';\n\n// import registerServiceWorker from './registerServiceWorker';\n\nconst rootReducer = combineReducers({\n  burgerBuilder:burgerReducer,\n  order:orderReducer,\n  auth:authReducer\n});\n\n//now redux dev tool will only be available in the development environment.(when we deploy,it will not work)\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\nconst store=createStore(rootReducer,composeEnhancers(\n  applyMiddleware(thunk)\n));\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Provider store={store}>\n//       <BrowserRouter>\n//         <App />\n//       </BrowserRouter>\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nconst app = (\n  <Provider store={store}>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render( app, document.getElementById( 'root' ) );\n// registerServiceWorker();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}