{"ast":null,"code":"var _jsxFileName = \"/home/gunjan/Desktop/React-hooks/bb-project(using hooks)/src/components/UI/Modal/Modal.js\";\nimport React from 'react';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst Modal = props => {\n  //this will only updates if show changes:\n  // shouldComponentUpdate(nextProps,nextState) \n  //     return (nextProps.show!==this.props.show || nextProps.children !== this.props.children);\n  // }\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Backdrop, {\n    show: props.show,\n    clicked: props.modalClosed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Modal,\n    style: {\n      transform: props.show ? 'translateY(0)' : 'translateY(-100vh',\n      opacity: props.show ? '1' : '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, props.children));\n}; //react.memo allow us to optimise the performance and only update this when the props of this component change.\n\n\nexport default React.memo(Modal, (prevProps, nextProps) => nextProps.show === prevProps.show && nextProps.children === prevProps.children);","map":{"version":3,"sources":["/home/gunjan/Desktop/React-hooks/bb-project(using hooks)/src/components/UI/Modal/Modal.js"],"names":["React","classes","Aux","Backdrop","Modal","props","show","modalClosed","transform","opacity","children","memo","prevProps","nextProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAEnB;AACA;AACA;AACA;AAGI,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,KAAK,CAACC,IAAtB;AAA4B,IAAA,OAAO,EAAED,KAAK,CAACE,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,eAEJ;AACI,IAAA,SAAS,EAAEN,OAAO,CAACG,KADvB;AAEI,IAAA,KAAK,EAAE;AACPI,MAAAA,SAAS,EAACH,KAAK,CAACC,IAAN,GAAa,eAAb,GAA6B,mBADhC;AAEPG,MAAAA,OAAO,EAACJ,KAAK,CAACC,IAAN,GAAa,GAAb,GAAmB;AAFpB,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKD,KAAK,CAACK,QANX,CAFI,CADJ;AAeH,CAvBL,C,CAyBA;;;AACA,eAAeV,KAAK,CAACW,IAAN,CACXP,KADW,EAEX,CAACQ,SAAD,EAAYC,SAAZ,KACEA,SAAS,CAACP,IAAV,KAAmBM,SAAS,CAACN,IAA7B,IACAO,SAAS,CAACH,QAAV,KAAuBE,SAAS,CAACF,QAJxB,CAAf","sourcesContent":["import React from 'react';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst Modal = props => {\n\n    //this will only updates if show changes:\n    // shouldComponentUpdate(nextProps,nextState) \n    //     return (nextProps.show!==this.props.show || nextProps.children !== this.props.children);\n    // }\n\n    \n        return(\n            <Aux>\n        <Backdrop show={props.show} clicked={props.modalClosed}/>\n        <div \n            className={classes.Modal}\n            style={{\n            transform:props.show ? 'translateY(0)':'translateY(-100vh',\n            opacity:props.show ? '1' : '0'\n            }}>\n            {props.children}\n        </div>\n    </Aux>\n\n        );\n\n    }\n\n//react.memo allow us to optimise the performance and only update this when the props of this component change.\nexport default React.memo(\n    Modal,\n    (prevProps, nextProps) =>\n      nextProps.show === prevProps.show &&\n      nextProps.children === prevProps.children\n  );"]},"metadata":{},"sourceType":"module"}