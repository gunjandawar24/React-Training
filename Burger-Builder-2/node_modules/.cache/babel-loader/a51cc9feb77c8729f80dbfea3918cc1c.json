{"ast":null,"code":"var _jsxFileName = \"/home/gunjan/Desktop/React-hooks/bb-project(using hooks)/src/hoc/withErrorHandler/withErrorHandler.js\";\n//i am using (with) becoz will be used with export not like <Aux> /jsx element\nimport React, { useState, useEffect } from 'react';\nimport Aux from '../Aux/Aux';\nimport Modal from '../../components/UI/Modal/Modal'; //we will wrap burger builder component hre \n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return props => {\n    const [error, setError] = useState(null); //automatically generate error like network error..\n\n    /*i want this code to get executed as soon as components is \n    created bcz it can check if igredients are nulll or not if yes then generate network error.*/\n    //so this can be done using constructor or componentwillmount not with componentdidmount bcz it get executed at last\n    //i want this to be called before child components are renderd \n    //if we add/wrap this hoc with other components then this constructor is called again again again so need to unmount \n\n    const reqInterceptor = axios.interceptors.request.use(req => {\n      setError(null);\n      return req;\n    });\n    const resInterceptor = axios.interceptors.response.use(res => res, err => {\n      setError(err);\n    }); //clean up work is happening here .\n\n    useEffect(() => {\n      return () => {\n        axios.interceptors.request.eject(this.reqInterceptor);\n        axios.interceptors.response.eject(this.resInterceptor);\n      };\n    }, []);\n\n    errorConfirmedHandler = () => {\n      this.setState({\n        error: null\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.error,\n      modalClosed: this.errorConfirmedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, this.state.error ? this.state.error.message : null), /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    })));\n  };\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/home/gunjan/Desktop/React-hooks/bb-project(using hooks)/src/hoc/withErrorHandler/withErrorHandler.js"],"names":["React","useState","useEffect","Aux","Modal","withErrorHandler","WrappedComponent","axios","props","error","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","eject","errorConfirmedHandler","setState","state","message"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,MAAkB,iCAAlB,C,CAEA;;AACA,MAAMC,gBAAgB,GAAG,CAAEC,gBAAF,EAAoBC,KAApB,KAA+B;AACpD,SAAOC,KAAK,IAAI;AACZ,UAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,IAAD,CAAjC,CADY,CAGZ;;AACA;;AAEA;AACA;AACA;;AAEI,UAAMU,cAAc,GAAGJ,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,GAAG,IAAI;AACzDL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,aAAOK,GAAP;AACH,KAHsB,CAAvB;AAIA,UAAMC,cAAc,GAAGT,KAAK,CAACK,YAAN,CAAmBK,QAAnB,CAA4BH,GAA5B,CAAgCI,GAAG,IAAIA,GAAvC,EAA4CC,GAAG,IAAI;AACtET,MAAAA,QAAQ,CAACS,GAAD,CAAR;AACH,KAFsB,CAAvB,CAdQ,CAmBR;;AACAjB,IAAAA,SAAS,CAAC,MAAM;AACZ,aAAO,MAAM;AACTK,QAAAA,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BO,KAA3B,CAAiC,KAAKT,cAAtC;AACAJ,QAAAA,KAAK,CAACK,YAAN,CAAmBK,QAAnB,CAA4BG,KAA5B,CAAkC,KAAKJ,cAAvC;AACH,OAHD;AAIH,KALQ,EAKP,EALO,CAAT;;AAOJK,IAAAA,qBAAqB,GAAG,MAAM;AAC1B,WAAKC,QAAL,CAAc;AAACb,QAAAA,KAAK,EAAE;AAAR,OAAd;AACH,KAFD;;AAII,wBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAE,KAAKc,KAAL,CAAWd,KADrB;AAEI,MAAA,WAAW,EAAE,KAAKY,qBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKE,KAAL,CAAWd,KAAX,GAAmB,KAAKc,KAAL,CAAWd,KAAX,CAAiBe,OAApC,GAA8C,IAHnD,CADJ,eAMI,oBAAC,gBAAD,oBAAsB,KAAKhB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANJ,CADJ;AAUH,GAzCL;AA0CC,CA3CL;;AA6CA,eAAeH,gBAAf","sourcesContent":["//i am using (with) becoz will be used with export not like <Aux> /jsx element\nimport React,{ useState , useEffect } from 'react';\nimport Aux from '../Aux/Aux';\nimport Modal from '../../components/UI/Modal/Modal';\n\n//we will wrap burger builder component hre \nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return props => {\n        const [error,setError] = useState(null);\n\n        //automatically generate error like network error..\n        /*i want this code to get executed as soon as components is \n        created bcz it can check if igredients are nulll or not if yes then generate network error.*/\n        //so this can be done using constructor or componentwillmount not with componentdidmount bcz it get executed at last\n        //i want this to be called before child components are renderd \n        //if we add/wrap this hoc with other components then this constructor is called again again again so need to unmount \n      \n            const reqInterceptor = axios.interceptors.request.use(req => {\n                setError(null);\n                return req;\n            });\n            const resInterceptor = axios.interceptors.response.use(res => res, err => {\n                setError(err)\n            });\n            \n    \n            //clean up work is happening here .\n            useEffect(() => {\n                return () => {\n                    axios.interceptors.request.eject(this.reqInterceptor);\n                    axios.interceptors.response.eject(this.resInterceptor);\n                }\n            },[]);\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n\nexport default withErrorHandler;"]},"metadata":{},"sourceType":"module"}