{"ast":null,"code":"var _jsxFileName = \"/home/gunjan/Desktop/bb-project/src/containers/Auth/Auth.js\";\nimport React, { Component } from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Input/Button';\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Mail Address'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Password'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      }\n    };\n  }\n\n  render() {\n    //converting state object into array\n    const formElementsArray = [];\n\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    } //now i'll loop through the array and create a form using jsx <Input />\n\n\n    const form = formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      invalid: !formElement.config.valid,\n      shouldValidate: formElement.config.validation,\n      touched: formElement.config.touched,\n      changed: event => this.inputChangedHandler(event, formElement.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Auth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, form, /*#__PURE__*/React.createElement(Button, {\n      btnType: \"Success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"SUBMIT\")));\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["/home/gunjan/Desktop/bb-project/src/containers/Auth/Auth.js"],"names":["React","Component","Input","Button","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","render","formElementsArray","key","push","id","config","orderForm","form","map","formElement","event","inputChangedHandler","classes","submitHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEzBI,KAFyB,GAEjB;AACJC,MAAAA,QAAQ,EAAG;AACPC,QAAAA,KAAK,EAAE;AACHC,UAAAA,WAAW,EAAE,OADV;AAEHC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,OADK;AAEXC,YAAAA,WAAW,EAAE;AAFF,WAFZ;AAMHC,UAAAA,KAAK,EAAE,EANJ;AAOHC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE,IADF;AAERC,YAAAA,OAAO,EAAC;AAFA,WAPT;AAWHC,UAAAA,KAAK,EAAE,KAXJ;AAYHC,UAAAA,OAAO,EAAE;AAZN,SADA;AAePC,QAAAA,QAAQ,EAAE;AACNV,UAAAA,WAAW,EAAE,OADP;AAENC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,UADK;AAEXC,YAAAA,WAAW,EAAE;AAFF,WAFT;AAMNC,UAAAA,KAAK,EAAE,EAND;AAONC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE,IADF;AAERK,YAAAA,SAAS,EAAC;AAFF,WAPN;AAWNH,UAAAA,KAAK,EAAE,KAXD;AAYNC,UAAAA,OAAO,EAAE;AAZH;AAfH;AADP,KAFiB;AAAA;;AAmCzBG,EAAAA,MAAM,GAAG;AAEL;AACA,UAAMC,iBAAiB,GAAG,EAA1B;;AACA,SAAK,IAAIC,GAAT,IAAgB,KAAKjB,KAAL,CAAWC,QAA3B,EAAqC;AACjCe,MAAAA,iBAAiB,CAACE,IAAlB,CAAuB;AACnBC,QAAAA,EAAE,EAAEF,GADe;AAEnBG,QAAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWqB,SAAX,CAAqBJ,GAArB;AAFW,OAAvB;AAIH,KATI,CAWL;;;AACA,UAAMK,IAAI,GAAGN,iBAAiB,CAACO,GAAlB,CAAuBC,WAAW,iBAC3C,oBAAC,KAAD;AACI,MAAA,GAAG,EAAEA,WAAW,CAACL,EADrB;AAEI,MAAA,WAAW,EAAEK,WAAW,CAACJ,MAAZ,CAAmBjB,WAFpC;AAGI,MAAA,aAAa,EAAEqB,WAAW,CAACJ,MAAZ,CAAmBhB,aAHtC;AAII,MAAA,KAAK,EAAEoB,WAAW,CAACJ,MAAZ,CAAmBb,KAJ9B;AAKI,MAAA,OAAO,EAAE,CAACiB,WAAW,CAACJ,MAAZ,CAAmBT,KALjC;AAMI,MAAA,cAAc,EAAEa,WAAW,CAACJ,MAAZ,CAAmBZ,UANvC;AAOI,MAAA,OAAO,EAAEgB,WAAW,CAACJ,MAAZ,CAAmBR,OAPhC;AAQI,MAAA,OAAO,EAAIa,KAAF,IAAa,KAAKC,mBAAL,CAA0BD,KAA1B,EAAiCD,WAAW,CAACL,EAA7C,CAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,CAAb;AAYA,wBACI;AAAK,MAAA,SAAS,EAAEQ,OAAO,CAAC5B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,QAAQ,EAAE,KAAK6B,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,IADL,eAEI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ,CADJ;AAQH;;AAnEwB;;AAsE7B,eAAevB,IAAf","sourcesContent":["import React , { Component } from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Input/Button';\n\nclass Auth extends Component {\n\n    state = {\n        controls : {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Mail Address'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail:true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength:6\n                },\n                valid: false,\n                touched: false\n            }\n        }\n    }\n\n    render() {\n\n        //converting state object into array\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n\n        //now i'll loop through the array and create a form using jsx <Input />\n        const form = formElementsArray.map( formElement => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={( event ) => this.inputChangedHandler( event, formElement.id )} />\n        ) );\n\n        return (\n            <div className={classes.Auth}>\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\">SUBMIT</Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}