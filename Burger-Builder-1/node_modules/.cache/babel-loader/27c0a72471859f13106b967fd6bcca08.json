{"ast":null,"code":"var _jsxFileName = \"/home/gunjan/Desktop/bb-project/src/App.js\";\nimport React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport Logout from './containers/Auth/Logout/Logout';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/index';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n});\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n});\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n}); //root component of our application:\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignUp();\n  }\n\n  render() {\n    //for unauthenticated users..\n    let routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/auth\",\n      component: asyncAuth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: BurgerBuilder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }));\n\n    if (this.props.isAuthenticated) {\n      routes = /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/checkout\",\n        component: asyncCheckout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/orders\",\n        component: asyncOrders,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/auth\",\n        component: asyncAuth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/logout\",\n        component: Logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: BurgerBuilder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, routes));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(actions.authCheckState())\n  };\n}; //connect will give error if we use with routing therefore wrap it using withRouter.\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App)); // --------------------------------- My Understanding----------------------------------\n\n/*\n  *the paths which you think never be visited by a user then you can load those path using lazy loading(bcz jab reactdom.render() call hoga tab sari files ka bundle bnta hai,which we dont want)\n  *like here those paths can be /orders or /checkout. \n*/\n//for any unknown route then redirect to /--{/* <Redirect to=\"/\" /> */}","map":{"version":3,"sources":["/home/gunjan/Desktop/bb-project/src/App.js"],"names":["React","Component","Layout","BurgerBuilder","Route","Switch","withRouter","Redirect","Logout","connect","actions","asyncComponent","asyncCheckout","asyncOrders","asyncAuth","App","componentDidMount","props","onTryAutoSignUp","render","routes","isAuthenticated","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","authCheckState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,SAASC,KAAT,EAAeC,MAAf,EAAuBC,UAAvB,EAAoCC,QAApC,QAAoD,kBAApD;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AAEA,MAAMC,aAAa,GAAGD,cAAc,CAAC,MAAM;AACzC,SAAO,OAAO,gCAAP,CAAP;AACD,CAFmC,CAApC;AAIA,MAAME,WAAW,GAAGF,cAAc,CAAC,MAAM;AACvC,SAAO,OAAO,4BAAP,CAAP;AACD,CAFiC,CAAlC;AAIA,MAAMG,SAAS,GAAGH,cAAc,CAAC,MAAM;AACrC,SAAO,OAAO,wBAAP,CAAP;AACD,CAF+B,CAAhC,C,CAIA;;AACA,MAAMI,GAAN,SAAkBd,SAAlB,CAA6B;AAE3Be,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWC,eAAX;AACD;;AAGDC,EAAAA,MAAM,GAAE;AACN;AACA,QAAIC,MAAM,gBACR,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEN,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAEX,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADF;;AAQA,QAAG,KAAKc,KAAL,CAAWI,eAAd,EAA8B;AAC5BD,MAAAA,MAAM,gBACJ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAER,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,SAAS,EAAEC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAEC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,eAIE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,SAAS,EAAEN,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,eAKE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAEL,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,eAME,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD;;AAEH,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGiB,MADH,CADF,CADF;AAQD;;AAtC4B;;AAyC7B,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAM;AACJF,IAAAA,eAAe,EAAGE,KAAK,CAACC,IAAN,CAAWC,KAAX,KAAqB;AADnC,GAAN;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLT,IAAAA,eAAe,EAAG,MAAMS,QAAQ,CAACjB,OAAO,CAACkB,cAAR,EAAD;AAD3B,GAAP;AAGD,CAJD,C,CAMA;;;AACA,eAAetB,UAAU,CAACG,OAAO,CAACa,eAAD,EAAiBI,kBAAjB,CAAP,CAA4CX,GAA5C,CAAD,CAAzB,C,CAGA;;AAEA;;;;AAIA","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport { Route,Switch, withRouter , Redirect } from 'react-router-dom';\nimport Logout from './containers/Auth/Logout/Logout';\nimport {connect} from 'react-redux';\nimport * as actions from './store/actions/index';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n});\n\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n});\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n});\n\n//root component of our application:\nclass App extends Component  {\n\n  componentDidMount(){\n    this.props.onTryAutoSignUp();\n  }\n\n\n  render(){\n    //for unauthenticated users..\n    let routes = (\n      <Switch>\n          <Route path=\"/auth\" component={asyncAuth} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if(this.props.isAuthenticated){\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={asyncCheckout} />\n          <Route path=\"/orders\" component={asyncOrders} />\n          <Route path=\"/auth\" component={asyncAuth} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );  \n    }\n\n  return (\n    <div >\n      <Layout>\n        {routes}\n      </Layout>\n      \n    </div>\n  );\n}\n}\n\nconst mapStateToProps = state => {\n  return{\n    isAuthenticated : state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp : () => dispatch(actions.authCheckState())\n  }\n}\n\n//connect will give error if we use with routing therefore wrap it using withRouter.\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App));\n\n\n// --------------------------------- My Understanding----------------------------------\n\n/*\n  *the paths which you think never be visited by a user then you can load those path using lazy loading(bcz jab reactdom.render() call hoga tab sari files ka bundle bnta hai,which we dont want)\n  *like here those paths can be /orders or /checkout. \n*/  \n//for any unknown route then redirect to /--{/* <Redirect to=\"/\" /> */}"]},"metadata":{},"sourceType":"module"}