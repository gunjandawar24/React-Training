{"ast":null,"code":"import * as actioTypes from './actionTypes';\nimport axios from '../../axios-orders';\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actioTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport const purchaseBurgerFail = error => {\n  return {\n    type: actioTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\nexport const purchaseBurgerStart = orderData => {\n  return dispatch => {\n    axios.post('/orders.json', order).then(response => {\n      console.log(response.data);\n      dispatch(purchaseBurgerSuccess(response.data, orderData));\n    }).catch(error => {\n      dispatch(purchaseBurgerFail(error));\n    });\n  };\n};","map":{"version":3,"sources":["/home/gunjan/Desktop/bb-project/src/store/actions/order.js"],"names":["actioTypes","axios","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","error","PURCHASE_BURGER_FAIL","purchaseBurgerStart","dispatch","post","order","then","response","console","log","data","catch"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,eAA5B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,EAAD,EAAIC,SAAJ,KAAkB;AACnD,SAAM;AACFC,IAAAA,IAAI,EAACL,UAAU,CAACM,uBADd;AAEFC,IAAAA,OAAO,EAACJ,EAFN;AAGFC,IAAAA,SAAS,EAACA;AAHR,GAAN;AAMH,CAPM;AASP,OAAO,MAAMI,kBAAkB,GAAIC,KAAD,IAAW;AACzC,SAAO;AACHJ,IAAAA,IAAI,EAACL,UAAU,CAACU,oBADb;AAEHD,IAAAA,KAAK,EAACA;AAFH,GAAP;AAKH,CANM;AAQP,OAAO,MAAME,mBAAmB,GAAIP,SAAD,IAAe;AAC9C,SAAOQ,QAAQ,IAAI;AACfX,IAAAA,KAAK,CAACY,IAAN,CAAW,cAAX,EAA0BC,KAA1B,EACHC,IADG,CACEC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAP,MAAAA,QAAQ,CAACV,qBAAqB,CAACc,QAAQ,CAACG,IAAV,EAAef,SAAf,CAAtB,CAAR;AACH,KAJG,EAKHgB,KALG,CAKGX,KAAK,IAAG;AACXG,MAAAA,QAAQ,CAACJ,kBAAkB,CAACC,KAAD,CAAnB,CAAR;AACH,KAPG;AAQH,GATD;AAUH,CAXM","sourcesContent":["import * as actioTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id,orderData) => {\n    return{\n        type:actioTypes.PURCHASE_BURGER_SUCCESS,\n        orderId:id,\n        orderData:orderData\n    };\n\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type:actioTypes.PURCHASE_BURGER_FAIL,\n        error:error\n    }\n\n};\n\nexport const purchaseBurgerStart = (orderData) => {\n    return dispatch => {\n        axios.post('/orders.json',order)\n    .then(response => {\n        console.log(response.data);\n        dispatch(purchaseBurgerSuccess(response.data,orderData));\n    })\n    .catch(error =>{\n        dispatch(purchaseBurgerFail(error));\n    });\n    }\n}"]},"metadata":{},"sourceType":"module"}