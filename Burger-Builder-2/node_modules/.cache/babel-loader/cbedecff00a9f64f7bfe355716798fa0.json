{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility'; //storing information in local storage.\n\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: '/'\n};\n\nconst authStart = (state, action) => {\n  //loading is set to true bcz i have started loading in auth_start.\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    //bcz we are done therefore laoding is set to false. \n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    //bcz we are done therefore laoding is set to false. \n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    userId: null\n  });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, {});\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/gunjan/Desktop/bb-project/src/store/reducers/auth.js"],"names":["actionTypes","updateObject","initialState","token","userId","error","loading","authRedirectPath","authStart","state","action","authSuccess","idToken","authFail","authLogout","setAuthRedirectPath","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B,C,CAGA;;AACA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,KAAK,EAAC,IADU;AAEhBC,EAAAA,MAAM,EAAC,IAFS;AAGhBC,EAAAA,KAAK,EAAC,IAHU;AAIhBC,EAAAA,OAAO,EAAC,KAJQ;AAKhBC,EAAAA,gBAAgB,EAAE;AALF,CAApB;;AAQA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC/B;AACD,SAAOT,YAAY,CAACQ,KAAD,EAAO;AAACJ,IAAAA,KAAK,EAAC,IAAP;AAAYC,IAAAA,OAAO,EAAC;AAApB,GAAP,CAAnB;AACH,CAHD;;AAKA,MAAMK,WAAW,GAAG,CAACF,KAAD,EAAOC,MAAP,KAAkB;AAClC,SAAOT,YAAY,CAACQ,KAAD,EAAO;AACtBN,IAAAA,KAAK,EAACO,MAAM,CAACE,OADS;AAEtBR,IAAAA,MAAM,EAACM,MAAM,CAACN,MAFQ;AAGtBC,IAAAA,KAAK,EAAC,IAHgB;AAItB;AACAC,IAAAA,OAAO,EAAC;AALc,GAAP,CAAnB;AAOH,CARD;;AAUA,MAAMO,QAAQ,GAAG,CAACJ,KAAD,EAAOC,MAAP,KAAkB;AAE/B,SAAOT,YAAY,CAACQ,KAAD,EAAO;AACtBJ,IAAAA,KAAK,EAACK,MAAM,CAACL,KADS;AAEtB;AACAC,IAAAA,OAAO,EAAC;AAHc,GAAP,CAAnB;AAKH,CAPD;;AASA,MAAMQ,UAAU,GAAG,CAACL,KAAD,EAAOC,MAAP,KAAkB;AACjC,SAAOT,YAAY,CAACQ,KAAD,EAAO;AAACN,IAAAA,KAAK,EAAC,IAAP;AAAYC,IAAAA,MAAM,EAAC;AAAnB,GAAP,CAAnB;AACH,CAFD;;AAIA,MAAMW,mBAAmB,GAAG,CAACN,KAAD,EAAOC,MAAP,KAAkB;AAC1C,SAAOT,YAAY,CAACQ,KAAD,EAAO,EAAP,CAAnB;AACH,CAFD;;AAKA,MAAMO,OAAO,GAAG,CAACP,KAAK,GAACP,YAAP,EAAoBQ,MAApB,KAA+B;AAC3C,UAAOA,MAAM,CAACO,IAAd;AACI,SAAKjB,WAAW,CAACkB,UAAjB;AAA6B,aAAOV,SAAS,CAACC,KAAD,EAAOC,MAAP,CAAhB;;AAC7B,SAAKV,WAAW,CAACmB,YAAjB;AAA+B,aAAOR,WAAW,CAACF,KAAD,EAAOC,MAAP,CAAlB;;AAC/B,SAAKV,WAAW,CAACoB,SAAjB;AAA4B,aAAOP,QAAQ,CAACJ,KAAD,EAAOC,MAAP,CAAf;;AAC5B,SAAKV,WAAW,CAACqB,WAAjB;AAA8B,aAAOP,UAAU,CAACL,KAAD,EAAOC,MAAP,CAAjB;;AAC9B,SAAKV,WAAW,CAACsB,sBAAjB;AAAyC,aAAOP,mBAAmB,CAACN,KAAD,EAAOC,MAAP,CAA1B;;AACzC;AAAS,aAAOD,KAAP;AANb;AASH,CAVD;;AAYA,eAAeO,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\n\n//storing information in local storage.\nconst initialState ={\n    token:null,\n    userId:null,\n    error:null,\n    loading:false,\n    authRedirectPath: '/'\n}\n\nconst authStart = (state,action) => {\n     //loading is set to true bcz i have started loading in auth_start.\n    return updateObject(state,{error:null,loading:true});\n}\n\nconst authSuccess = (state,action) => {\n    return updateObject(state,{\n        token:action.idToken,\n        userId:action.userId,\n        error:null,\n        //bcz we are done therefore laoding is set to false. \n        loading:false\n    })\n}\n\nconst authFail = (state,action) => {\n\n    return updateObject(state,{\n        error:action.error, \n        //bcz we are done therefore laoding is set to false. \n        loading:false\n    })\n}\n\nconst authLogout = (state,action) => {\n    return updateObject(state,{token:null,userId:null});\n}\n\nconst setAuthRedirectPath = (state,action) => {\n    return updateObject(state,{})\n}\n\n\nconst reducer = (state=initialState,action) => {\n    switch(action.type){\n        case actionTypes.AUTH_START: return authStart(state,action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state,action);\n        case actionTypes.AUTH_FAIL: return authFail(state,action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state,action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\n        default: return state;\n    }\n\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}